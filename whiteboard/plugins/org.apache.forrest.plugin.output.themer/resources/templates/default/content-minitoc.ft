<?xml version="1.0" encoding="UTF-8"?>
<!--
  Copyright 2002-2005 The Apache Software Foundation or its licensors,
  as applicable.

  Licensed under the Apache License, Version 2.0 (the "License");
  you may not use this file except in compliance with the License.
  You may obtain a copy of the License at

      http://www.apache.org/licenses/LICENSE-2.0

  Unless required by applicable law or agreed to in writing, software
  distributed under the License is distributed on an "AS IS" BASIS,
  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  See the License for the specific language governing permissions and
  limitations under the License.
-->
<forrest:contract xmlns:forrest="http://apache.org/forrest/templates/1.0"
  name="content-minitoc" type="nugget">
  <description>
    content-minitoc - Configure the TOC, i.e. the Table of Contents.
  @max-depth - 
   how many "section" levels need to be included in the
   generated Table of Contents (TOC). 
  @min-sections - 
   Minimum required to create a TOC.
  @location ("page","menu","page,menu", "none") - 
   Where to show the TOC.
  </description>
  <usage><![CDATA[<forrest:contract name="content-minitoc">
  <forrest:properties contract="content-minitoc">
    <forrest:property name="content-minitoc-toc" nugget="get.toc">
      <url>#{$cocoon/parameters/getRequest}.toc.xml</url>
    </forrest:property>
    <forrest:property name="content-minitoc-conf" max-depth="2" min-sections="1" location="page"/>
  </forrest:properties>
</forrest:contract>]]></usage>
  <forrest:template xmlns:forrest="http://apache.org/forrest/templates/1.0" 
    format="html" name="content-minitoc" inputFormat="xsl" body="true" 
    head="false">
    <xsl:stylesheet version="1.1" 
      xmlns:xsl="http://www.w3.org/1999/XSL/Transform">
      <!--FIXME: that need come from the content-main-->
      <xsl:template name="content-minitoc-body" 
        match="div[@id='content']/div[@id='skinconf-toc-page']">
        <xsl:param name="content-minitoc-toc"/>
        <xsl:param name="content-minitoc-conf"/>
        <xsl:comment>+ |start content-minitoc +</xsl:comment>
        <xsl:if test="contains($content-minitoc-conf/toc/@location,'page')">
          <xsl:if 
            test="count($content-minitoc-toc/tocitems/tocitem) >= $content-minitoc-conf/toc/@min-sections">
            <div id="content-minitoc-area">
              <xsl:call-template name="content-minitoc-processing">
                <xsl:with-param name="tocroot" 
                  select="$content-minitoc-toc/tocitems"/>
                <xsl:with-param name="content-minitoc-conf" 
                  select="$content-minitoc-conf"/>
              </xsl:call-template>
            </div>
          </xsl:if>
        </xsl:if>
        <xsl:comment>+ |end minitoc +</xsl:comment>
      </xsl:template>
      <xsl:template name="content-minitoc-processing">
        <xsl:param name="tocroot"/>
        <xsl:param name="content-minitoc-conf"/>
        <xsl:if 
          test="count($tocroot/tocitem) >= $content-minitoc-conf/toc/@min-sections">
          <xsl:if test="contains($content-minitoc-conf/toc/@location,'page')">
            <ul class="minitoc">
              <xsl:for-each select="$tocroot/tocitem">
                <li>
                  <a href="{@href}"> 
                    <xsl:value-of select="@title"/> 
                  </a>
                  <xsl:if 
                    test="@level&#60;$content-minitoc-conf/toc/@max-depth+1">
                    <xsl:call-template name="content-minitoc-processing">
                      <xsl:with-param name="tocroot" select="."/>
                      <xsl:with-param name="content-minitoc-conf" 
                        select="$content-minitoc-conf"/>
                    </xsl:call-template>
                  </xsl:if>
                </li>
              </xsl:for-each>
            </ul>
          </xsl:if>
        </xsl:if>
      </xsl:template>
    </xsl:stylesheet>
  </forrest:template>
</forrest:contract>