<?xml version="1.0" encoding="UTF-8"?>
<!--
  Copyright 2002-2004 The Apache Software Foundation or its licensors,
  as applicable.

  Licensed under the Apache License, Version 2.0 (the "License");
  you may not use this file except in compliance with the License.
  You may obtain a copy of the License at

      http://www.apache.org/licenses/LICENSE-2.0

  Unless required by applicable law or agreed to in writing, software
  distributed under the License is distributed on an "AS IS" BASIS,
  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  See the License for the specific language governing permissions and
  limitations under the License.
-->
<forrest:contract name="nav-section" type="nugget"
  xmlns:forrest="http://apache.org/forrest/templates/1.0">
  <description>
    nav-section will output the navigation to pages within the current site section AKA menu
  </description>
  <usage><![CDATA[<forrest:contract name="nav-section"/>]]></usage>
  <forrest:template
  xmlns:forrest="http://apache.org/forrest/templates/1.0"
  format="xhtml" name="nav-section" inputFormat="xsl" body="true" head="false">

    <xsl:stylesheet version="1.1" xmlns:xsl="http://www.w3.org/1999/XSL/Transform">
		  
		  <xsl:template name="nav-section-body">
<xsl:comment>+
    |start menu
    +</xsl:comment>
            <xsl:if test="div[@id='menu']/ul/li">
              <xsl:call-template name="menu"/>
            </xsl:if>
<xsl:comment>+
    |end menu
    +</xsl:comment>
		  </xsl:template>
      <xsl:template name="menu">
<xsl:comment>+
    |start Menu
    +</xsl:comment>
   	<div id="nav-section">
			<ul>
<!--menu - inner-->	
        <xsl:for-each select = "div[@id='menu']/ul/li">
          <xsl:call-template name = "innermenuli" >
              <xsl:with-param name="id" select="concat('1.', position())"/>
          </xsl:call-template>
        </xsl:for-each>
			</ul>
		</div>
	</xsl:template>  
  
  <xsl:template name="innermenuli">   
    <xsl:param name="id"/>
    <xsl:variable name="tagid">
      <xsl:choose>
        <xsl:when test="descendant-or-self::node()/li/div/@class='current'"><xsl:value-of select="concat('menu_selected_',$id)"/></xsl:when>
        <xsl:otherwise><xsl:value-of select="concat('menu_',concat(font,$id))"/></xsl:otherwise>
      </xsl:choose>
    </xsl:variable>
    <xsl:variable name="whichGroup">
      <xsl:choose>
        <xsl:when test="descendant-or-self::node()/li/div/@class='current'">currentmenuitemgroup</xsl:when>
        <xsl:otherwise>menuitemgroup</xsl:otherwise>
      </xsl:choose>
    </xsl:variable>
    
    <li class="pagegroup"><strong><xsl:value-of select="h1"/></strong>
      <ul>
        <xsl:for-each select= "ul/li">

          <xsl:choose>
            <xsl:when test="a">
              <li><a href="{a/@href}"><xsl:value-of select="a" /></a></li>
            </xsl:when>
            <xsl:when test="div/@class='current'">
              <li class="menupage">
                <div class="menupagetitle"><xsl:value-of select="div" /></div>
                <xsl:if test="$config/toc/@max-depth&gt;0 and contains($minitoc-location,'menu')">
                  <li class="menupageitemgroup">
                      <xsl:for-each select = "//tocitems/tocitem">
                        <div class="menupageitem">
                          <xsl:choose>
                            <xsl:when test="string-length(@title)>15">
                              <a href="{@href}" title="{@title}"><xsl:value-of select="substring(@title,0,20)" />...</a>
                            </xsl:when>
                            <xsl:otherwise>
                              <a href="{@href}"><xsl:value-of select="@title" /></a>
                            </xsl:otherwise>
                          </xsl:choose>
                        </div>
                      </xsl:for-each>
                  </li>
                </xsl:if>
              </li>
            </xsl:when>
            <xsl:otherwise>
              <xsl:call-template name = "innermenuli">
                 <xsl:with-param name="id" select="concat($id, '.', position())"/>
              </xsl:call-template>
            </xsl:otherwise>
          </xsl:choose>

        </xsl:for-each>
      </ul></li>
  		</xsl:template>
		</xsl:stylesheet>
	</forrest:template>
</forrest:contract>