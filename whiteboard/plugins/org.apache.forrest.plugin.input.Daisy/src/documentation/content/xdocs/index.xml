<?xml version="1.0" encoding="UTF-8"?>
<!--
  Copyright 2002-2004 The Apache Software Foundation or its licensors,
  as applicable.

  Licensed under the Apache License, Version 2.0 (the "License");
  you may not use this file except in compliance with the License.
  You may obtain a copy of the License at

      http://www.apache.org/licenses/LICENSE-2.0

  Unless required by applicable law or agreed to in writing, software
  distributed under the License is distributed on an "AS IS" BASIS,
  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  See the License for the specific language governing permissions and
  limitations under the License.
-->
<!DOCTYPE document PUBLIC "-//APACHE//DTD Documentation V2.0//EN" "http://forrest.apache.org/dtd/document-v20.dtd">
<document> 
  <header> 
    <title>Welcome to the org.apache.forrest.plugin.input.Daisy Plugin</title> 
  </header> 
  <body> 
    <section>
      <title>Apache Forrest - org.apache.forrest.plugin.input.Daisy Plugin</title>
      <p>This plugin retrieves documents from a 
      <a href="http://www.cocoondev.org/daisy">Daisy</a>
      repository.</p>
    </section>
    
    <section>
      <title>Usage</title>
      
      <p>Perhaps the most important thing to realise about this plugin is that 
      there is no relationship between the Forrest URL space and the URL space
      defined in the Daisy repository. That is the path to and the name of each
      document within Forrest needs not be the same as the path to and the name
      of the document within the Daisy repository.</p>
      
      <p>This enables the repository to be structured in a way that is
      appropriate for it's editors and the Forrest document collection can
      be structured in a way that is appropriate for the target audience. In
      fact, it is possible to use the same document from a Daisy repository in
      multiple Forrest collections each using a completely different URL 
      space that is custom designed for the end user of the document
      collection.</p> 
      
      <p>In order to tell Forrest which document to retrieve from the
      repository you need to pass a number of request parameters in the URL.
      These are listed in the table below.</p>
      
      <warning>This behaviour will change shortly. Using request parameters is cumbersome 
      and difficult to maintain. It also prevents a site from being statically generated.
      We will be moving towards using a location map to record the true location of a
      file. Use the current system with care.</warning>
      
      <table>
        <caption>Request Parameters</caption>
        <tr>
          <th>Parameter</th>
          <th>Comments</th>
        </tr>
        <tr>
          <th>repositoryType</th>
          <td>The type of repository to access. This indicates how the
          document is to be retreieved from the repository. At present this
          can only take the value of dais-wiki, which indicates the document
          is to be retreived via a daisy Wiki instance. Future versions of
          this plugin may allow documents to be retrieved directly from the
          repository server and other plugins may provide support for 
          different repository types.</td>
        </tr>
        <tr>
          <th>repositoryURL</th>
          <td>The URL of the Daisy-Wiki interface to the repository.</td>
        </tr>
        <tr>
          <th>repositoryPort</th>
          <td>The Port number of the daisy-wiki application. If
          ommitted the default value of 80 is used.</td>
        </tr>
        <tr>
          <th>repositoryCollection</th>
          <td>The name of the collection in which the document is stored.</td>
        </tr>
        <tr>
          <th>documentID</th>
          <td>The ID of the document within Daisy. This can be the numeric
          identifier used by Daisy repository or it can be any valid ID as 
          defined within the Daisy-Wiki. The documentID can also define
          a version and/or variant of the document if required. This is done
          in exactly the same way as would be done in he Daisy-Wiki.</td>
        </tr>
      </table>
      
      <section>
        <title>Retrieving RAW content</title>
        <p>If you want to retrieve the raw, unprocessed HTML from
        Daisy simply request the file with a <code>.source.xml</code>
        extenstion.</p>
        
        <warning>This behaviour will change in the future to enable
        you to retrieve the raw unprocessed XML rather than the
        HTML from Daisy. Use with care in the meantime.</warning>
      </section>
      
      <section>
        <title>Filtering Content</title>
        <p>You may not have full control of the content in the repository, or
        you may wish to supress the presentation of some of the parts, for 
        example, the fields within the repository. There are two points at 
        which you can filter the content, at the point of retrieval (called a
        pre-filter) and once the file has been converted to the internal 
        Forrest format (called a post-filter).</p>
        
        <section>
          <title>Pre-Filters</title>
          
          <p>Pre-Filters are applied to the HTML retrieved from the 
          Daisy repository. To achieve this you can 
          provide an XSL file called <code>daisy/preFilter.xsl</code> in your 
          projects stylesheet directory (default location is 
          <code>PROJECT_HOME/src/documentation/resources/stylesheets</code>).</p>
        
          <p>The preFilter XSL file operates on the HTML generated by Daisy. 
          If you wish to look at this format of the document simply request 
          the page with an <code>.source.xml</code> extension.</p>
        
          <warning>This behaviour will change in the future,
          instead of processing the HTML produced by Daisy we will process 
          the the XML. Use with care in the meantime.</warning>
          
          <xsl:stylesheet xmlns:xsl="http://www.w3.org/1999/XSL/Transform" 
				version="1.0">
  
          
          <section>
            <title>Example</title>
            <p>To filter out the document heading of the Daisy
            document, use the following XSL:</p>
            
            <source><![CDATA[
  <xsl:template match="h1[@class='daisy-document-name']"/>
  
  <xsl:template match="@*|*|text()|processing-instruction()|comment()">
    <xsl:copy>
      <xsl:apply-templates select="@*|*|text()|processing-instruction()|comment()"/>
    </xsl:copy>
  </xsl:template>
</xsl:stylesheet>
            ]]></source>
          </section>
        </section>
        
        <section>
          <title>Post-Filters</title>
          
          <p>Post-Filters are applied to the XDoc generated by 
          Forrest. To achieve this you can 
          provide an XSL file called <code>daisy/postFilter.xsl</code> in your 
          projects stylesheet directory (default location is 
          <code>PROJECT_HOME/src/documentation/resources/stylesheets</code>).</p>
        
          <p>The postFilter XSL file operates on the XDoc generated by Forrest. 
          If you wish to look at this format of the document simply request 
          the page with an <code>.xml</code> extension.</p>
        
          <section>
            <title>Example</title>
            <p>To filter out the <code>Fields</code> section of the Daisy
            document, use the following XSL:</p>
            
            <source><![CDATA[
  <xsl:stylesheet xmlns:xsl="http://www.w3.org/1999/XSL/Transform" 
          version="1.0">
    
    <xsl:template match="section[title='Fields']"/>
    
    <xsl:template match="@*|*|text()|processing-instruction()|comment()">
      <xsl:copy>
        <xsl:apply-templates select="@*|*|text()|processing-instruction()|comment()"/>
      </xsl:copy>
    </xsl:template>
  </xsl:stylesheet>
            ]]></source>
            
            <p>This XSL will filter out all fields from all files retreived 
            from a Daisy repository. If you only wanted to remove them from
            specific files, or only remove specific fields you would need
            to extend this stylesheet accordingly.</p>
          </section>
      </section>
      
      <section>
        <title>Examples</title>
          <ul>
            <li><a href="daisy/index.html?repositoryType=daisy-wiki&amp;repositoryURL=www.cocoondev.org&amp;repositoryCollection=daisy&amp;documentID=index">Daisy Home Page</a> (retrieved live, you must be online)</li>
          </ul>
      </section>
    </section>
  </body>
</document>