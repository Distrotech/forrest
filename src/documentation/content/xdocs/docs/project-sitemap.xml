<?xml version="1.0" encoding="UTF-8"?>
<!--
  Copyright 2002-2004 The Apache Software Foundation

  Licensed under the Apache License, Version 2.0 (the "License");
  you may not use this file except in compliance with the License.
  You may obtain a copy of the License at

      http://www.apache.org/licenses/LICENSE-2.0

  Unless required by applicable law or agreed to in writing, software
  distributed under the License is distributed on an "AS IS" BASIS,
  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  See the License for the specific language governing permissions and
  limitations under the License.
-->
<!DOCTYPE document PUBLIC "-//APACHE//DTD Documentation V1.2//EN" "http://forrest.apache.org/dtd/document-v12.dtd">
<document> 
  <header> 
    <title>Using project sitemaps</title> 
  </header> 
  <body> 
    <section id="introduction">
      <title>Introduction</title>

      <p>With Forrest 0.6 it is now possible for projects to "plugin" 
      to our sitemaps, without needing to copy the main sitemaps and keep
      them them synchonised. This will enable hassle-free update to
      future Forrest versions.</p>
    </section>

    <section id="how">
      <title>How does it work?</title>

      <p>If a project has a <code>sitemap.xmap</code> file in it's 
      documentation dir, that gets mounted automatically by Forrest and 
      becomes part of the processing: it is a preprocessing step, and 
      is the first one to handle the request. Because of this it can 
      serve any file directly. If it does not want to 
      serve a file, it can simply not match the URL and Forrest will take 
      care of it as usual.</p>

      <p>The cool thing is that if that pipeline serves an xml representation, 
      Forrest will provide a skinned version of it.</p>

      <p>So if the project sitemap matches test.xml and transforms that to a
      correctly structured Forrest intermediate "document-v*",
      then the user will see test.html fully rendered by Forrest.</p>

      <p>Of course, to resolve the directories in your sitemap it is important 
      to use the 'project:' and 'forrest:' variables to prevent any possible 
      issue in the future.</p>
    </section>

    <section id="examples">
      <title>Example uses of this technique</title>

      <section id="generate-site-and-tabs">
        <title>Generating site.xml and tabs.xml</title>
        <p>If you are using some other content packaging technique, such as
        IMS Content Packages, you will want to generate the site.xml and tabs.xml
        files from your content package. This can be done by creating custom
        versions of <code>linkmap.xmap</code> and <code>menu.xmap</code> and
        <code>tabs.xmap</code> in your project directory.</p>

        <p>As with custom sitemaps (see above) Forrest will automatically detect
        the presence of a customised version of any of these files and will
        use them appropriately. These files act as a preprocessor stage and
        any matches which are not handled will be processed by the normal
        Forrest *.xmap files.
        </p>
      </section>
    </section>
  </body>
</document>
