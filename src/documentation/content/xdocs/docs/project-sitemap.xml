<?xml version="1.0" encoding="UTF-8"?>
<!--
  Copyright 2002-2004 The Apache Software Foundation

  Licensed under the Apache License, Version 2.0 (the "License");
  you may not use this file except in compliance with the License.
  You may obtain a copy of the License at

      http://www.apache.org/licenses/LICENSE-2.0

  Unless required by applicable law or agreed to in writing, software
  distributed under the License is distributed on an "AS IS" BASIS,
  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  See the License for the specific language governing permissions and
  limitations under the License.
-->
<!DOCTYPE document PUBLIC "-//APACHE//DTD Documentation V1.2//EN" "http://forrest.apache.org/dtd/document-v12.dtd">
<document> 
  <header> 
    <title>Using project sitemaps</title> 
  </header> 
  <body> 
    <section>
      <title>Introduction</title>
      <source>
With a small but very important code change in Cocoon, I'm happy to 
announce that we are finally getting to the end of the copyless struggle :-)

With current Forrest 0.6-dev it's now possible for projects to "plugin" 
to our sitemaps without having to copy stuff; this will make possible 
hassle-free update fo future Forrest versions.

How does it work?

If a project has a sitemap.xmap file in it's documentation dir, it gets 
mounted automatically by Forrest and it becomes part of the processing: 
it's a preprocessing step, and it's the first one to handle the request. 
Because of this it can serve any file directly instead of Forrest: if it 
doesn't want to serve a file, it can simply not match the URL and 
Forrest will take care of it as usual.

The cool thing is that if that pipeline serves an xml representation, 
Forrest will provide a skinned version of it.

So if the project sitemap matches test.xml, and serves a correct 
documentDTD file, then the user will see test.html fully rendered by 
Forrest.

Of course, to resolve the directories it's important to use the 
'project:' and 'forrest:' variables, to prevent any possible issue in 
the future.

This will also enable us to cleany refactor the Forrest internals, 
because the mounts will not necessarily take final control of the 
processing if a match is found.
      </source>
    </section>
  </body>
</document>
