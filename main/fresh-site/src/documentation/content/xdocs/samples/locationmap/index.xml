<?xml version="1.0" encoding="UTF-8"?>
<!--
  Copyright 2002-2004 The Apache Software Foundation or its licensors,
  as applicable.

  Licensed under the Apache License, Version 2.0 (the "License");
  you may not use this file except in compliance with the License.
  You may obtain a copy of the License at

      http://www.apache.org/licenses/LICENSE-2.0

  Unless required by applicable law or agreed to in writing, software
  distributed under the License is distributed on an "AS IS" BASIS,
  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  See the License for the specific language governing permissions and
  limitations under the License.
-->
<!DOCTYPE document PUBLIC "-//APACHE//DTD Documentation V2.0//EN" "http://forrest.apache.org/dtd/document-v20.dtd">
<document> 
  <header> 
    <title>Locationmaps</title> 
  </header> 
  <body> 
    <section id="overview">
      <title>About Locationmaps</title>
      <p>A locationmap defines a mapping from requests to location strings.</p>

      <p>It was conceived to:</p>  

      <ul>
        <li>Provide a more powerful means for semantic linking.</li>
        <li>Enable Forrest with a standard configuration override mechanism.</li>
        <li>decouple the conceptual source space used by Cocoon from
        the concrete source space, so that a change in the concrete sources
        does not impact on the sitemap</li>
      </ul>

      <p>The syntax of a locationmap resembles that of the sitemap in that it also makes use
      of Matchers and Selectors to traverse a tree of nodes towards a leaf. In the case of
      the locationmap however the leaf does not identify a pipeline but instead identifies
      a location string.</p>
    </section>
    
    <section id="examples">
      <title>Locationmap Examples</title>
      <section>
        <title>Retrieving an XDoc via HTTP</title>
        
        
        <p>Normally files are generated from <code>{project:content.xdocs}</code>.
        Using the Locationmap it is possible to make these files come from elsewhere.
        This is useful if you want to pull files from different directory structures,
        oe even remote repositories.</p>
        
        <p>The target of "/remoteDemo/*.html"
        is generated from a source retrieved from the Forrest SVN.</p>
        
        <note>Because the above URL retrieves the source file from SVN it will
        only work if you are online. For this reason we have not enabled this link
        as it would stop you building this site offline. However, if you are online 
        you can enter the URL into the browesr and it will work (however, note the 
        current limitations, described below, regarding the site: and ext: protocols).</note>
        
        <p>The locationmap matcher for the link above is:</p>
        
        <source>
 &lt;match pattern="remoteDemo/**.xml"&gt;
   &lt;location src="http://svn.apache.org/repos/asf/forrest/trunk/site-author/content/xdocs/{1}.xml" /&gt;
 &lt;/match&gt;
        </source>
      
        <p>Note that because this is a wildcard matcher you can request any page
        from SVN simply by requesting 
        <code>/remoteDemo/PATH/TO/FILE/FILENAME.html</code>. In addition, we
        can request any other output format available via Forrest plugins.</p>
        
        <p>When including resources from remote repositories one has to
        be careful about things like <code>site</code> and <code>ext</code>
        linking. If the targets are not defined in the local 
        <code>site.xml</code> file then these links will be broken.</p>
        
        <warning>Because of the above limitation many of the links in the
        page generated from the above example are broken.</warning>
        
      </section>

<!-- Comment out as this requries additions to the sitemap, they should really be done in a plugin
      
      <section>
        <title>Retrieving HTML from Lenya</title>
        
        <p><a href="http://lenya.apache.org">Apache Lenya</a> is a Java Open-Source Content Management System based 
        on open standards such as XML and XSLT and the Apache Software Stack, in particular the XML publishing 
        framework Apache Cocoon. Apache Forrest can retrieve an publish content from an Apache Lenya CMS.</p>
        
        <p>For example, the following locationmap matcher will instruct Forrest to retrieve content from
        <code>http://lenya.zones.apache.org:8888/default/live/*.html?raw=true</code>, whenever a local URL of
        <code>lenya/**</code> is encountered.</p>
        
        <source>
 &lt;match pattern="lenya/**.xml"&gt;
   &lt;location src="http://lenya.zones.apache.org:8888/default/live/{1}.html?raw=true" /&gt;
 &lt;/match&gt;
        </source>
        
        <p>However, since the source returned by this match is HTML and not XDoc we also neet to convert this
        to our internal XDoc format. We do this by adding the match below to our projects <code>sitemap.xmap</code>
        file.</p>
        
        <source>
&lt;map:match pattern="lenya/**.xml"&gt;
  &lt;map:generate type="html" src="{lm:{0}}" /&gt;
  &lt;map:transform src="{forrest:stylesheets}/html2document.xsl" /&gt;
  &lt;map:serialize type="xml"/&gt;
&lt;/map:match&gt;
        </source>
        
        <p>Since this snippet uses the HTML generator you must also ensure that your sitemap has the HTML generator
        component defined. That is, your sitemap must also include:</p>
        
        <source>
&lt;map:components&gt;
  &lt;map:generators default="file"&gt;
    &lt;map:generator name="html"
      src="org.apache.cocoon.generation.HTMLGenerator"&gt;
      &lt;jtidy-config&gt;WEB-INF/jtidy.properties&lt;/jtidy-config&gt;
    &lt;/map:generator&gt;
  &lt;/map:generators&gt;
&lt;/map:components&gt;
        </source>
        
        <p>Since the HTML generator uses JTidy we need to make available a JTidy configuration file.
        This is placed in <code>PROJECT_HOME/src/documentation/WEB-INF/jtidy.properties</code> (the
        location can be changed in the above sitemap snippet). A sample config file is given below:</p>
        
        <source>
indent=yes
indent-spaces=8
wrap=72
markup=no
output-xml=no
input-xml=no
show-warnings=yes
numeric-entities=yes
quote-marks=yes
quote-nbsp=yes
quote-ampersand=yes
break-before-br=yes
uppercase-tags=no
uppercase-attributes=no
char-encoding=latin1
        </source>
                
        <note>This requirement to add items to your project sitemap will be removed in a future version either by Lenya
        outputting XDoc or by Forrest switching to using XHTMl as its internal format (whichever comes
        first.</note>
        
        <p>Here is the <a href="/lenya/index.html">index page</a> from that location.</p>
        
        <warning>This functionality is still under development. It does not work fully yet. For exammple, absolute URLs
        in the source document need to be rewritten to ensure that they are matched by the locationmap.</warning>
        
      </section>

-->

      <section>
        <title>Link Rewriting</title>
        <p>The locationmap can be used to rewrite URLs when the page is generated.
        For example, when the locationmap has:</p>
        <source>
 &lt;match pattern="rewriteDemo/**"&gt;
   &lt;location src="http://www.burrokeet.org/{1}.xml" /&gt;
 &lt;/match&gt;
        </source>
        <p><a href="lm:rewriteDemo/index">This link leads is rewritten to
        an offsite address</a> not
        specified in the link, which has <code>href="lm:rewriteDemo/index"</code>.</p>
      </section>

    </section>
  </body>
</document>
