<?xml version="1.0"?>
<!--
  Copyright 2002-2004 The Apache Software Foundation or its licensors,
  as applicable.

  Licensed under the Apache License, Version 2.0 (the "License");
  you may not use this file except in compliance with the License.
  You may obtain a copy of the License at

      http://www.apache.org/licenses/LICENSE-2.0

  Unless required by applicable law or agreed to in writing, software
  distributed under the License is distributed on an "AS IS" BASIS,
  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  See the License for the specific language governing permissions and
  limitations under the License.
-->
<!DOCTYPE document PUBLIC "-//APACHE//DTD Documentation V2.0//EN" 
  "http://forrest.apache.org/dtd/document-v20.dtd">
<document>
  <header>
  <title>Becoming an Apache Forrest committer</title>
  <abstract>This is a discussion of how users can progress to 
    become committers within the Apache Forrest project.</abstract>
  </header>
  <body>
    <section id="committers">
    <title>What is a committer?</title>
    <warning>
      This document is under development and does not yet represent
      the view of our community.
    </warning>
    <note>Content is being gleaned from various current and past
      discussions on the Forrest dev mailing list, in particular
      <a href="http://marc.theaimsgroup.com/?l=forrest-dev&amp;m=112239074108858">this</a>.
      Further editing of this page is needed and would 
      be greatly appreciated.</note>
    <p>Committer is an Apache term used to signify someone who is 
      committed to a particular project and who is invited to be part of 
      the core group within the project that ensures the project's vitality 
      (represented by the PMC, Project Management Committee).  One thing 
      that is sometimes hard to understand when you are new to the
      Apache Way<sup>1</sup>
      is that we don't really care about code, it is the 
      community we care about. This is because a strong and healthy 
      community will usually generate strong and healthy code.  As a result 
      of the Apache focus on community it is more important for people here 
      to discuss and explore within the community.</p>
    </section>
    <section id="copdoc">
    <title>Contributing to the Project - CoPDoC</title>
    <p>The foundation of a project and how the community contributes 
      to it is known by the acronym CoPDoC:</p>
    <ul>
    <li>(Co)mmunity - one must interact with others, and share vision 
      and knowledge</li>
    <li>(P)roject - a clear vision and consensus are needed</li>
    <li>(Do)cumentation - without it, the stuff remains only in the 
      minds of the authors</li>
    <li>(C)ode - discussion goes nowhere without code</li>
    </ul>
    </section>
    <section id="becoming">
    <title>Becoming a Committer</title>
    <p>There is nothing within Apache that says you must write code 
      in order to be a committer. Anyone who is supportive of the community 
      and works in any of the CoPDoC areas is a likely candidate for 
      committership. Apache is a meritocracy. That is, once someone has 
      contributed sufficiently to any area of  CoPDoC they can be voted in 
      as a committer. Being a committer does not mean you commit code, it 
      means you are committed to the project.  One of the key contributions 
      people can make to the community is through the support of a wide 
      user base by assisting users on the user list,  writing user oriented 
      docs and ensuring the user viewpoint is understood by all devs. A 
      main idea behind being a committer is the ability to be a mentor and 
      to work cooperatively with your peers.</p>
    <p>The following diagram shows the progression of a user to a 
      committer/mentor.</p>
    <p><img alt="committer path" src="committed-1.png"/></p>
    <p>Meritocracy progresses this way
      <code>------------> ------------------------></code></p>
    <p>Note that this is not a heirarchy, it is a progression from a 
      broad user base from which those that wish to to contribute to the 
      ongoing development of the project (again, through any aspect of 
      CoPDoC, not just coding) can become involved as developers.  From 
      these developers are those who take on additional roles of mentoring 
      and more fully commit themselves to the project.</p>
    </section>
    <section id="discussion">
    <title>Adding to the discussions</title>
    <p>Discussion leads to a clearer community understanding of the 
      project's goals and objectives and also of how the community works.  
      Of course, there has to be a balance between too much chat and not 
      enough code.  If something is easy to do in code and does not impact 
      the overall product (such as a bug fix) then just go ahead and do it. 
      However, if something is to introduce a new feature it is best to 
      introduce your idea to the community via an email to the dev mail 
      list first. In this introduction you should outline why you want to 
      do something, how you propose to do it (pseudo code is a good way of 
      expressing this) and ask for comments. Any comments you receive will 
      help you fine tune your design and, in many cases, produce a quicker, 
      more elegant solution (this is the benefit of many eyes on a 
      solution). In Apache the absence of comments from others does not 
      mean it is not a good idea, in fact the reverse is true, it means 
      nobody has any objection or anything to add. It is only if people 
      respond that you need to discuss further. Once the discussion reaches 
      consensus then coding can proceed. Once you have implicit or explicit 
      approval for your contribution just go ahead and do it. Be sure to 
      document what you have done whilst you are at it. Without 
      documentation (comments in code, mailing list discussion and user 
      docs) your code is next to useless - nobody knows it is there and 
      nobody knows how it works.</p>
    </section>
    <section id="references">
      <title>References</title>
      <p><sup>1</sup> See more information about "the Apache Way" in the
      <a href="http://www.apache.org/foundation/how-it-works.html">ASF How it works</a>.</p>
      <p>
        Apache Forrest
        <a href="site:guidelines">project guidelines</a>.
      </p>
    </section>
  </body>
</document>
