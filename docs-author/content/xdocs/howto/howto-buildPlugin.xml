<?xml version="1.0" encoding="UTF-8"?>
<!--
  Copyright 2002-2004 The Apache Software Foundation

  Licensed under the Apache License, Version 2.0 (the "License");
  you may not use this file except in compliance with the License.
  You may obtain a copy of the License at

      http://www.apache.org/licenses/LICENSE-2.0

  Unless required by applicable law or agreed to in writing, software
  distributed under the License is distributed on an "AS IS" BASIS,
  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  See the License for the specific language governing permissions and
  limitations under the License.
-->
<!DOCTYPE howto PUBLIC "-//APACHE//DTD How-to V2.0//EN" "http://forrest.apache.org/dtd/howto-v20.dtd">
<howto>
  <header>
    <title>How to Build a Plugin</title>

    <version>0.1</version>

    <abstract>This How-To describes the steps necessary to build a plugin for 
    Forrest. Forrest uses plugins to add new input formats, output formats
    and to change its default behaviour. Since plugins are downloaded when
    needed and can be hosted at any location plugin code can be developed 
    independantly of Apache Forrest. This how-to describes each of the major
    steps in creating a plugin and then works through some examples of 
    plugin creation in order to illustrate the materials.</abstract>

    <last-modified-content-date date="2004-11-14" />
  </header>

  <audience title="Intended Audience">
    <p>Users needing to add additional input formats or output formats or
    to change the way Forrest internals work.</p>
    
    <warning>The Plugin Infrastructure is still at an early stage of design 
    and implementation, consequently this How-To <em>may</em> be out of date
    and/or incomplete. If you are having problems with any of the steps 
    described, please ask for help on the developers mailing list (and then
    provide patches for this document).</warning>
  </audience>

  <purpose title="Purpose">
    <p>This How-To will illustrate how to build a plugin, publish a plugin
    and configure a Forrest project to use their plugin.</p>
  </purpose>

  <prerequisites title="Prerequisites">
    <p>Plugin developers should have:</p>
    
    <ul>
      <li>a basic knowledge of XML, XSLT and Cocoon pipelines</li>
      <li>a clear use-case for extending Forrest</li>
      <li>verified with the Apache Forrest developer community that the
      requried functionality does not already exist</li>
    </ul>
  </prerequisites>

  <steps title="Steps">
    <p>Here is how to proceed.</p>

    <section id="typeOfPlugin">
      <title>Type of Plugin</title>

      <p>There are three types of plugin, each with a clear purpose, you
      must first decide which 
      <a href="site:documentation/developers/pluginInfrastructure">type of plugin</a>
      you need to build.</p>
      
    </section>
    
    <section>
      <title>Seed a New Plugin</title>
      <p>Regardless of the type of plugin you are building, the directory
      structure is almost identical, as are most of the requried
      configuration files. In this How-To we will assume that you are creating a 
      plugin in the Forrest source tree. All plugins are developed in the
      <code>forrest/plugins</code> directory.</p>
      
      <p class="instruction">Run the following set of commands:</p>
      
      <source>
      cd [path_to_forrest]/plugins
      ant seedPlugin
      </source>      
      
      <p>The above ant target will ask you the name of the plugin and will
      build a minimal plugin directory structure and configuration. You will 
      need to customise these files to buyild your plugin.</p>
      
      <note>If you plan on building your plugin elsewhere you can copy the
      <code>build.xml</code> build file to your own plugin work directory and 
      use it there.</note>
      
      <p>See 
      <a href="site:documentation/developers/pluginInfrastructure">What Does 
      a Forrest Plugin Look Like?</a> for more information on the plugin
      directory structure and configuration files.</p>
    
      <section>
        <title>Edit the Plugin Tempalte</title>
        <p>You now have a skeleton plugin project. However, it doesn't do 
        anything useful yet. Now is a good time to edit some of the files
        provided. For example:</p>
        
        <section>
          <title>status.xml</title>
          <p>This file is used to track changes to the plugin
          project and to manage lists of things that still need to be done.
          At this stage you should correct the <code>person</code> entry
          near the top of the file. It is also a good idea to add a few key
          milestones in the task list towards the bottom of the file.</p>
          
          <p>As you work on the plugin you should record all major changes in
          this file so that it can then be used as a changelog for your
          plugin.</p>
        </section>
        
        <section>
          <title>forrest.properties</title>
          
          <p>This file defines many configuration parameters for Forrest. It
          does not need to be customised in most cases. However, see
          for more details.</p>
        </section>
        
        <section>
          <title>src/documentation/skinconf.xml</title>
          <p>This configures the skin for your plugins documentation. There
          are some items that need to be configured in here, for example, the
          copyright information. The file is heavily commented so probably
          best to read through it, changing what you need to.</p>
        </section>
        
        <section>
          <title>Documentation</title>
          <p>It is also a good idea to start writing the documentation at this
          stage. The above process created a very simple plugin documentation
          site for you. All you have to do is add the content.</p>
        </section>
      </section>
    </section>
    
    <section>
      <title>Edit the Plugin XMap file</title>
      <p>The plugin <code>xmap</code> file is a Cocoon sitemap that is mounted
      at a strategic place in the Forrest pipeline. It is in this file
      that you will instruct Forrest how to operate. An input plugin
      must provide a <code>input.xmap</code> file, an ouput plugin
      must provide a <code>output.xmap</code> file, whilst an internal
      plugin provides a <code>internal.xmap</code> file.</p>
      
      <p>It is beyond the scope of this How-To to give details about how to 
      build your plugins XMap. See the 
      <a href="site:documentation/developers/sitemap-ref">Sitemap Reference</a> for general
      information. See also 
      <a href="site:documentation/developers/pluginInfrastructure">Plugin Infrastructure</a>
      for some hints and tips on creating plugin sitemaps. In addition, as with
      all development work on Forrest, you will find
      the <a href="ext:forrest/mail-lists/forrest-dev">developer mailing list</a>
      a very doog resource (check the archives before posting, please).</p>
    </section>
    
    <section>
      <title>Create the Necessary Resource Files</title>
      <fixme author="rdg">Discuss the XSL files and other such resources</fixme>
    </section>
    
    <section>
      <title>Create Samples in the Documentation</title>
      <p>Plugin documentation should provide (as a minimum) an
      index page that provides an overview and a set of samples that demonstrate
      the functionlaity of the plugin. Typically these samples will be
      provided in a <code>samples</code> subdirectory in the plugin 
      documentation and will be referenced from both <code>site.xml</code>
      and <code>tabs.xml</code>.</p>
      
      <p>Try to provide a sample for all the major functions of your plugin
      and document any configuration that is available.</p>
    </section>
    
    <section>
      <title>Testing a Plugin</title>
      <p>Since your documentation for the plugin illustrates all of its 
      functionality you can use that site for testing the plugin. However, you
      must first deploy in your local install of Forrest. The 
      <code>plugins</code> directory of the Forrest project contains an
      Apache Ant build file with some useful targets for deploying to a local
      instance of Forrest.</p>
      
      <p class="instruction">Run the command <code>ant local-deploy</code> in
      the plugins directory.</p>
      
      <p>You will be asked the name of the plugin you wish to deploy, enter
      the name of your plugin and hit return. All the necessary files will be 
      copied to your local Forrest installation. You can now generate your
      documentation.</p>
      
      <p class="instruction">Run the command <code>forrest site</code> in your
      plugin directory to generate your documentation.</p>
      
      <p>Of course, the build should complete without errors.</p>
      
      <note>You can also use <code>forrest run</code> to interactively examine
      your documentation (point your prowser at 
      <a href="localhost:8888">localhost:8888</a>).</note>
      
      <p>It is also a really good idea to build proper tests for your 
      plugins using a suitable testing framework, for example, 
      <a href="http://webtest.canoo.com/">WebTest</a>. We recomend that you
      use the samples in your documentation for your tests, this way you are
      documenting your plugin at the same time as writing your tests.</p>
    </section>
    
    <section>
      <title>Releasing a Plugin</title>
    
      <section>
        <title>Register the Plugin with Apache Forrest</title>
        <fixme author="rdg">Describe the plugins.xml file</fixme>
        <fixme author="rdg">Describe making a request of Forrest devs for 
        inclusion</fixme>
      </section>
      
      <section>
        <title>Publish the Plugin</title>
        <fixme author="rdg">Describe the generation of the plugin zip and
        the publication of that zip (ant dist)</fixme>
      </section>
    </section>
    
    <section>
      <title>Examples</title>
      <p>This section will provide some example plugins to help illustrate the
      steps discussed above.</p>
        <section>
          <title>Input Plugin</title>
          <fixme author="RDG">Discuss OpenOffice.org plugin here</fixme>
        </section>
        
        <section>
          <title>Output Plugin</title>
          <fixme author="RDG">Discuss s5 plugin here</fixme>
        </section>
        
        <section>
          <title>Internal Plugin</title>
          <fixme author="RDG">Discuss IMSManifest plugin here</fixme>
        </section>
    </section>

    <section id="extension">
      <title>Further Reading</title>
      
      <ul>
        <li><a href="site:documentation/developers/pluginInfrastructure">Plugin Infrastrucuture Documentation</a> for Developers</li>
        <li><a href="site:documentation/plugins">Plugins Documentation</a> for users</li>
      </ul>
    </section>

    <section id="summarise">
      <title>Summarise the Entire Process</title>

      <fixme author="rdg">In a few sentences, remind the reader what they have just learned.
      This helps to reinforce the main points of your How-To.</fixme>
    </section>
  </steps>
</howto>
