  <!--
    Give user a chance to override without editing this file
    (and without typing -D each time he compiles it)
  -->
  <property file=".ant.properties"/>
  <property file="${user.home}/.ant.properties"/>
    
  <!--
    these are here only for those who use jikes compiler. For other
    developers this part makes no difference.
  -->
  <property name="build.compiler.emacs" value="on"/>
  <property name="build.compiler.warnings" value="true"/>
  <property name="build.compiler.pedantic" value="false"/>
  <property name="build.compiler.depend" value="true"/>
  <property name="build.compiler.fulldepend" value="true"/>
  
  <!-- =================================================================== -->
  <!-- Indentify Classpath                                                 -->
  <!-- =================================================================== -->
  <path id="centipede.classpath">
    <fileset dir="./tools/centipede/lib">
      <include name="*.jar"/>
    </fileset>
  </path>
    
  <path id="classpath">
    <fileset dir="./lib/core">
      <include name="*.jar"/>
    </fileset>
    <fileset dir="./lib/optional">
      <include name="*.jar"/>
    </fileset>
  </path>

  <path id="scratchpad.classpath">
    <fileset dir="./lib/core">
      <include name="*.jar"/>
    </fileset>
    <fileset dir="./lib/optional">
      <include name="*.jar"/>
    </fileset>
    <fileset dir="./src/scratchpad/lib">
      <include name="*.jar"/>
    </fileset>
    <!-- FIXME : how to build a path that references a property set in 'init' target ? -->
    <pathelement path="./build/${name}/classes"/>
  </path>

  <path id="contrib.classpath">
    <fileset dir="./lib/core">
      <include name="*.jar"/>
    </fileset>
    <fileset dir="./lib/optional">
      <include name="*.jar"/>
    </fileset>
    <fileset dir="./src/contrib/lib">
      <include name="*.jar"/>
    </fileset>    
    <!-- FIXME : how to build a path that references a property set in 'init' target ? -->
    <pathelement path="./build/${name}/classes"/>
  </path>
  
